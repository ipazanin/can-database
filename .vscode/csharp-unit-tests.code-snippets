{
  // https://code.visualstudio.com/docs/editor/userdefinedsnippets
  // https://stackoverflow.com/questions/33485643/vscode-snippet-for-creating-new-c-sharp-class-with-namespace-declaration
  "Console": {
    "scope": "csharp",
    "prefix": "app-console",
    "body": [
      "System.Console.WriteLine(\"-------------------------------------------------------------\");",
      "System.Console.WriteLine(${1:variable});",
      "System.Console.WriteLine(\"-------------------------------------------------------------\");"
    ],
    "description": "Log output to Console.WriteLine"
  },
  "ConsoleJson": {
    "scope": "csharp",
    "prefix": "app-console-json",
    "body": [
      "System.Console.WriteLine(\"-------------------------------------------------------------\");",
      "System.Console.WriteLine(System.Text.Json.JsonSerializer.Serialize(${1:variable}));",
      "System.Console.WriteLine(\"-------------------------------------------------------------\");"
    ],
    "description": "Log output to Console.WriteLine"
  },
  "Region": {
    "scope": "csharp",
    "prefix": "app-region",
    "body": ["#region $0", "", "#endregion $0"],
    "description": "Log output to Console.WriteLine"
  },
  "UnitTestMethod": {
    "scope": "csharp",
    "prefix": "app-unit-test-method",
    "body": [
      "#region MethodName$0",
      "[Fact]",
      "public void MethodName$0_Returns_When()",
      "{",
      "    #region Arrange",
      "    #endregion Arrange",
      "",
      "    #region Act",
      "    #endregion Act",
      "",
      "    #region Assert",
      "    #endregion Assert",
      "}",
      "#endregion MethodName$0"
    ],
    "description": "Log output to Console.WriteLine"
  },
  "Class": {
    "scope": "csharp",
    "prefix": "app-class",
    "body": [
      "namespace ${TM_DIRECTORY/^\\/private\\/var\\/projects\\/rimac\\/can-database\\/source\\/CanDatabase(\\/([^\\/]+))(\\/([^\\/]+))?(\\/([^\\/]+))?(\\/([^\\/]+))?(\\/([^\\/]+))?(\\/([^\\/]+))?(\\/([^\\/]+))?(\\/([^\\/]+))?(\\/([^\\/]+))?(\\/([^\\/]+))?/$2${3:+.}$4${5:+.}$6${7:+.}$8${9:+.}$10${11:+.}$12${13:+.}$14${15:+.}$16${17:+.}$18${19:+.}$20/gi}",
      "{",
      "    /// <summary>",
      "    /// ${TM_FILENAME_BASE}",
      "    /// </summary>",
      "    public class ${TM_FILENAME_BASE}",
      "    {",
      "        #region Constants",
      "        #endregion Constants",
      "",
      "        #region Fields",
      "        #endregion Fields",
      "",
      "        #region Properties",
      "        $0",
      "        #endregion Properties",
      "",
      "        #region Constructors",
      "        /// <summary>",
      "        /// ${TM_FILENAME_BASE} Constructor",
      "        /// </summary>",
      "        public ${TM_FILENAME_BASE}()",
      "        {",
      "        }",
      "        #endregion Constructors",
      "",
      "        #region Methods",
      "        #endregion Methods",
      "    }",
      "}"
    ],
    "description": "Create new Public Class"
  },
  "Interface": {
    "scope": "csharp",
    "prefix": "app-interface",
    "body": [
      "namespace ${TM_DIRECTORY/^\\/private\\/var\\/projects\\/rimac\\/can-database\\/source\\/CanDatabase(\\/([^\\/]+))(\\/([^\\/]+))?(\\/([^\\/]+))?(\\/([^\\/]+))?(\\/([^\\/]+))?(\\/([^\\/]+))?(\\/([^\\/]+))?(\\/([^\\/]+))?(\\/([^\\/]+))?(\\/([^\\/]+))?/$2${3:+.}$4${5:+.}$6${7:+.}$8${9:+.}$10${11:+.}$12${13:+.}$14${15:+.}$16${17:+.}$18${19:+.}$20/gi}",
      "{",
      "    /// <summary>",
      "    /// ${TM_FILENAME_BASE}",
      "    /// </summary>",
      "    public interface ${TM_FILENAME_BASE}",
      "    {",
      "    }",
      "}"
    ],
    "description": "Create new Public Interface"
  },
  "Model": {
    "scope": "csharp",
    "prefix": "app-model",
    "body": [
      "namespace ${TM_DIRECTORY/^\\/private\\/var\\/projects\\/rimac\\/can-database\\/source\\/CanDatabase(\\/([^\\/]+))(\\/([^\\/]+))?(\\/([^\\/]+))?(\\/([^\\/]+))?(\\/([^\\/]+))?(\\/([^\\/]+))?(\\/([^\\/]+))?(\\/([^\\/]+))?(\\/([^\\/]+))?(\\/([^\\/]+))?/$2${3:+.}$4${5:+.}$6${7:+.}$8${9:+.}$10${11:+.}$12${13:+.}$14${15:+.}$16${17:+.}$18${19:+.}$20/gi}",
      "{",
      "    /// <summary>",
      "    /// ${TM_FILENAME_BASE} Model",
      "    /// </summary>",
      "    public class ${TM_FILENAME_BASE}",
      "    {",
      "        #region Constants",
      "        #endregion Constants",
      "",
      "        #region Properties",
      "        $0",
      "        #endregion Properties",
      "",
      "        #region Constructors",
      "        /// <summary>",
      "        /// ${TM_FILENAME_BASE} Constructor",
      "        /// </summary>",
      "        public ${TM_FILENAME_BASE}()",
      "        {",
      "        }",
      "        #endregion Constructors",
      "",
      "        #region Methods",
      "        #endregion Methods",
      "    }",
      "}"
    ],
    "description": "Create new Model class"
  },
  "Service": {
    "scope": "csharp",
    "prefix": "app-service",
    "body": [
      "namespace ${TM_DIRECTORY/^\\/private\\/var\\/projects\\/rimac\\/can-database\\/source\\/CanDatabase(\\/([^\\/]+))(\\/([^\\/]+))?(\\/([^\\/]+))?(\\/([^\\/]+))?(\\/([^\\/]+))?(\\/([^\\/]+))?(\\/([^\\/]+))?(\\/([^\\/]+))?(\\/([^\\/]+))?(\\/([^\\/]+))?/$2${3:+.}$4${5:+.}$6${7:+.}$8${9:+.}$10${11:+.}$12${13:+.}$14${15:+.}$16${17:+.}$18${19:+.}$20/gi}",
      "{",
      "    /// <summary>",
      "    /// ${TM_FILENAME_BASE}",
      "    /// </summary>",
      "    public class ${TM_FILENAME_BASE}",
      "    {",
      "        #region Constants",
      "        #endregion Constants",
      "",
      "        #region Fields",
      "        #endregion Fields",
      "",
      "        #region Constructors",
      "        /// <summary>",
      "        /// ${TM_FILENAME_BASE} Constructor",
      "        /// </summary>",
      "        public ${TM_FILENAME_BASE}(",
      "            $0",
      "        )",
      "        {",
      "        }",
      "        #endregion Constructors",
      "",
      "        #region Methods",
      "        #endregion Methods",
      "    }",
      "}"
    ],
    "description": "Create new Service"
  },
  "UnitTest": {
    "scope": "csharp",
    "prefix": "app-unit-test",
    "body": [
      "using Xunit;",
      "",
      "namespace ${TM_DIRECTORY/^\\/private\\/var\\/projects\\/rimac\\/can-database\\/source\\/UnitTests(\\/([^\\/]+))(\\/([^\\/]+))?(\\/([^\\/]+))?(\\/([^\\/]+))?(\\/([^\\/]+))?(\\/([^\\/]+))?(\\/([^\\/]+))?(\\/([^\\/]+))?(\\/([^\\/]+))?(\\/([^\\/]+))?/$2${3:+.}$4${5:+.}$6${7:+.}$8${9:+.}$10${11:+.}$12${13:+.}$14${15:+.}$16${17:+.}$18${19:+.}$20/gi}",
      "{",
      "    /// <summary>",
      "    /// ${TM_FILENAME_BASE}",
      "    /// </summary>",
      "    public class ${TM_FILENAME_BASE}",
      "    {",
      "        #region MethodName$0",
      "        [Fact]",
      "        public void MethodName$0_Returns_When()",
      "        {",
      "            #region Arrange",
      "            #endregion Arrange",
      "",
      "            #region Act",
      "            #endregion Act",
      "",
      "            #region Assert",
      "            #endregion Assert",
      "        }",
      "        #endregion MethodName$0",
      "    }",
      "}"
    ],
    "description": "Create new XUnit Test"
  }
}
